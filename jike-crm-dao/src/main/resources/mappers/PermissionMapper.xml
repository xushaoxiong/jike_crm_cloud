<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jike.user.dao.PermissionMapper" >
  <resultMap id="BaseResultMap" type="com.jike.user.model.Permission" >
    <id column="permission_id" property="permissionId" jdbcType="BIGINT" />
    <result column="permission_name" property="permissionName" jdbcType="VARCHAR" />
    <result column="parent_id" property="parentId" jdbcType="BIGINT" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.jike.user.model.Permission" extends="BaseResultMap" >
    <result column="description" property="description" jdbcType="VARBINARY" />
  </resultMap>
  <sql id="Base_Column_List" >
    permission_id, permission_name, parent_id
  </sql>
  <sql id="Blob_Column_List" >
    description
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from permission
    where permission_id = #{permissionId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from permission
    where permission_id = #{permissionId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.jike.user.model.Permission" >
    insert into permission (permission_id, permission_name, parent_id, 
      description)
    values (#{permissionId,jdbcType=BIGINT}, #{permissionName,jdbcType=VARCHAR}, #{parentId,jdbcType=BIGINT}, 
      #{description,jdbcType=VARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="com.jike.user.model.Permission" >
    insert into permission
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="permissionId != null" >
        permission_id,
      </if>
      <if test="permissionName != null" >
        permission_name,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="description != null" >
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="permissionId != null" >
        #{permissionId,jdbcType=BIGINT},
      </if>
      <if test="permissionName != null" >
        #{permissionName,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARBINARY},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jike.user.model.Permission" >
    update permission
    <set >
      <if test="permissionName != null" >
        permission_name = #{permissionName,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARBINARY},
      </if>
    </set>
    where permission_id = #{permissionId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.jike.user.model.Permission" >
    update permission
    set permission_name = #{permissionName,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=BIGINT},
      description = #{description,jdbcType=VARBINARY}
    where permission_id = #{permissionId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jike.user.model.Permission" >
    update permission
    set permission_name = #{permissionName,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=BIGINT}
    where permission_id = #{permissionId,jdbcType=BIGINT}
  </update>
</mapper>